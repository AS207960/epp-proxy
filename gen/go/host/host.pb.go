// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: host/host.proto

package host

import (
	common "github.com/as207960/epp-proxy/gen/go/epp/common"
	isnic "github.com/as207960/epp-proxy/gen/go/epp/isnic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostStatus int32

const (
	HostStatus_ClientDeleteProhibited HostStatus = 0
	HostStatus_ClientUpdateProhibited HostStatus = 1
	HostStatus_Linked                 HostStatus = 2
	HostStatus_Ok                     HostStatus = 3
	HostStatus_PendingCreate          HostStatus = 4
	HostStatus_PendingDelete          HostStatus = 5
	HostStatus_PendingTransfer        HostStatus = 6
	HostStatus_PendingUpdate          HostStatus = 7
	HostStatus_ServerDeleteProhibited HostStatus = 8
	HostStatus_ServerUpdateProhibited HostStatus = 9
)

// Enum value maps for HostStatus.
var (
	HostStatus_name = map[int32]string{
		0: "ClientDeleteProhibited",
		1: "ClientUpdateProhibited",
		2: "Linked",
		3: "Ok",
		4: "PendingCreate",
		5: "PendingDelete",
		6: "PendingTransfer",
		7: "PendingUpdate",
		8: "ServerDeleteProhibited",
		9: "ServerUpdateProhibited",
	}
	HostStatus_value = map[string]int32{
		"ClientDeleteProhibited": 0,
		"ClientUpdateProhibited": 1,
		"Linked":                 2,
		"Ok":                     3,
		"PendingCreate":          4,
		"PendingDelete":          5,
		"PendingTransfer":        6,
		"PendingUpdate":          7,
		"ServerDeleteProhibited": 8,
		"ServerUpdateProhibited": 9,
	}
)

func (x HostStatus) Enum() *HostStatus {
	p := new(HostStatus)
	*p = x
	return p
}

func (x HostStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_host_host_proto_enumTypes[0].Descriptor()
}

func (HostStatus) Type() protoreflect.EnumType {
	return &file_host_host_proto_enumTypes[0]
}

func (x HostStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostStatus.Descriptor instead.
func (HostStatus) EnumDescriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{0}
}

type HostCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RegistryName string `protobuf:"bytes,2,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
}

func (x *HostCheckRequest) Reset() {
	*x = HostCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCheckRequest) ProtoMessage() {}

func (x *HostCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCheckRequest.ProtoReflect.Descriptor instead.
func (*HostCheckRequest) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{0}
}

func (x *HostCheckRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostCheckRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

type HostCheckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available bool                    `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Reason    *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	CmdResp   *common.CommandResponse `protobuf:"bytes,3,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *HostCheckReply) Reset() {
	*x = HostCheckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCheckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCheckReply) ProtoMessage() {}

func (x *HostCheckReply) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCheckReply.ProtoReflect.Descriptor instead.
func (*HostCheckReply) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{1}
}

func (x *HostCheckReply) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *HostCheckReply) GetReason() *wrapperspb.StringValue {
	if x != nil {
		return x.Reason
	}
	return nil
}

func (x *HostCheckReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type HostInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RegistryName string `protobuf:"bytes,2,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
}

func (x *HostInfoRequest) Reset() {
	*x = HostInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoRequest) ProtoMessage() {}

func (x *HostInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoRequest.ProtoReflect.Descriptor instead.
func (*HostInfoRequest) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{2}
}

func (x *HostInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostInfoRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

type HostInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RegistryId        string                  `protobuf:"bytes,2,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	Statuses          []HostStatus            `protobuf:"varint,3,rep,packed,name=statuses,proto3,enum=epp.host.HostStatus" json:"statuses,omitempty"`
	Addresses         []*common.IPAddress     `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	ClientId          string                  `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientCreatedId   *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=client_created_id,json=clientCreatedId,proto3" json:"client_created_id,omitempty"`
	CreationDate      *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	LastUpdatedClient *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=last_updated_client,json=lastUpdatedClient,proto3" json:"last_updated_client,omitempty"`
	LastUpdatedDate   *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=last_updated_date,json=lastUpdatedDate,proto3" json:"last_updated_date,omitempty"`
	LastTransferDate  *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=last_transfer_date,json=lastTransferDate,proto3" json:"last_transfer_date,omitempty"`
	CmdResp           *common.CommandResponse `protobuf:"bytes,11,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *HostInfoReply) Reset() {
	*x = HostInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoReply) ProtoMessage() {}

func (x *HostInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoReply.ProtoReflect.Descriptor instead.
func (*HostInfoReply) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{3}
}

func (x *HostInfoReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostInfoReply) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *HostInfoReply) GetStatuses() []HostStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *HostInfoReply) GetAddresses() []*common.IPAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *HostInfoReply) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *HostInfoReply) GetClientCreatedId() *wrapperspb.StringValue {
	if x != nil {
		return x.ClientCreatedId
	}
	return nil
}

func (x *HostInfoReply) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *HostInfoReply) GetLastUpdatedClient() *wrapperspb.StringValue {
	if x != nil {
		return x.LastUpdatedClient
	}
	return nil
}

func (x *HostInfoReply) GetLastUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedDate
	}
	return nil
}

func (x *HostInfoReply) GetLastTransferDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTransferDate
	}
	return nil
}

func (x *HostInfoReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type HostCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addresses    []*common.IPAddress `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	RegistryName string              `protobuf:"bytes,3,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	IsnicInfo    *isnic.HostInfo     `protobuf:"bytes,4,opt,name=isnic_info,json=isnicInfo,proto3" json:"isnic_info,omitempty"`
}

func (x *HostCreateRequest) Reset() {
	*x = HostCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCreateRequest) ProtoMessage() {}

func (x *HostCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCreateRequest.ProtoReflect.Descriptor instead.
func (*HostCreateRequest) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{4}
}

func (x *HostCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostCreateRequest) GetAddresses() []*common.IPAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *HostCreateRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *HostCreateRequest) GetIsnicInfo() *isnic.HostInfo {
	if x != nil {
		return x.IsnicInfo
	}
	return nil
}

type HostCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pending      bool                    `protobuf:"varint,2,opt,name=pending,proto3" json:"pending,omitempty"`
	CreationDate *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	CmdResp      *common.CommandResponse `protobuf:"bytes,5,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *HostCreateReply) Reset() {
	*x = HostCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCreateReply) ProtoMessage() {}

func (x *HostCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCreateReply.ProtoReflect.Descriptor instead.
func (*HostCreateReply) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{5}
}

func (x *HostCreateReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostCreateReply) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *HostCreateReply) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *HostCreateReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type HostDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RegistryName string `protobuf:"bytes,2,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
}

func (x *HostDeleteRequest) Reset() {
	*x = HostDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDeleteRequest) ProtoMessage() {}

func (x *HostDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDeleteRequest.ProtoReflect.Descriptor instead.
func (*HostDeleteRequest) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{6}
}

func (x *HostDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostDeleteRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

type HostDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pending bool                    `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
	CmdResp *common.CommandResponse `protobuf:"bytes,3,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *HostDeleteReply) Reset() {
	*x = HostDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDeleteReply) ProtoMessage() {}

func (x *HostDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDeleteReply.ProtoReflect.Descriptor instead.
func (*HostDeleteReply) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{7}
}

func (x *HostDeleteReply) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *HostDeleteReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type HostUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Add          []*HostUpdateRequest_Param `protobuf:"bytes,2,rep,name=add,proto3" json:"add,omitempty"`
	Remove       []*HostUpdateRequest_Param `protobuf:"bytes,3,rep,name=remove,proto3" json:"remove,omitempty"`
	NewName      *wrapperspb.StringValue    `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	RegistryName string                     `protobuf:"bytes,5,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	IsnicInfo    *isnic.HostInfo            `protobuf:"bytes,6,opt,name=isnic_info,json=isnicInfo,proto3" json:"isnic_info,omitempty"`
}

func (x *HostUpdateRequest) Reset() {
	*x = HostUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUpdateRequest) ProtoMessage() {}

func (x *HostUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUpdateRequest.ProtoReflect.Descriptor instead.
func (*HostUpdateRequest) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{8}
}

func (x *HostUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostUpdateRequest) GetAdd() []*HostUpdateRequest_Param {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *HostUpdateRequest) GetRemove() []*HostUpdateRequest_Param {
	if x != nil {
		return x.Remove
	}
	return nil
}

func (x *HostUpdateRequest) GetNewName() *wrapperspb.StringValue {
	if x != nil {
		return x.NewName
	}
	return nil
}

func (x *HostUpdateRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *HostUpdateRequest) GetIsnicInfo() *isnic.HostInfo {
	if x != nil {
		return x.IsnicInfo
	}
	return nil
}

type HostUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pending bool                    `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
	CmdResp *common.CommandResponse `protobuf:"bytes,3,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *HostUpdateReply) Reset() {
	*x = HostUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUpdateReply) ProtoMessage() {}

func (x *HostUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUpdateReply.ProtoReflect.Descriptor instead.
func (*HostUpdateReply) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{9}
}

func (x *HostUpdateReply) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *HostUpdateReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type HostUpdateRequest_Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*HostUpdateRequest_Param_Address
	//	*HostUpdateRequest_Param_State
	Param isHostUpdateRequest_Param_Param `protobuf_oneof:"param"`
}

func (x *HostUpdateRequest_Param) Reset() {
	*x = HostUpdateRequest_Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_host_host_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUpdateRequest_Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUpdateRequest_Param) ProtoMessage() {}

func (x *HostUpdateRequest_Param) ProtoReflect() protoreflect.Message {
	mi := &file_host_host_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUpdateRequest_Param.ProtoReflect.Descriptor instead.
func (*HostUpdateRequest_Param) Descriptor() ([]byte, []int) {
	return file_host_host_proto_rawDescGZIP(), []int{8, 0}
}

func (m *HostUpdateRequest_Param) GetParam() isHostUpdateRequest_Param_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *HostUpdateRequest_Param) GetAddress() *common.IPAddress {
	if x, ok := x.GetParam().(*HostUpdateRequest_Param_Address); ok {
		return x.Address
	}
	return nil
}

func (x *HostUpdateRequest_Param) GetState() HostStatus {
	if x, ok := x.GetParam().(*HostUpdateRequest_Param_State); ok {
		return x.State
	}
	return HostStatus_ClientDeleteProhibited
}

type isHostUpdateRequest_Param_Param interface {
	isHostUpdateRequest_Param_Param()
}

type HostUpdateRequest_Param_Address struct {
	Address *common.IPAddress `protobuf:"bytes,1,opt,name=address,proto3,oneof"`
}

type HostUpdateRequest_Param_State struct {
	State HostStatus `protobuf:"varint,2,opt,name=state,proto3,enum=epp.host.HostStatus,oneof"`
}

func (*HostUpdateRequest_Param_Address) isHostUpdateRequest_Param_Param() {}

func (*HostUpdateRequest_Param_State) isHostUpdateRequest_Param_Param() {}

var File_host_host_proto protoreflect.FileDescriptor

var file_host_host_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x65, 0x70, 0x70, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x69, 0x73, 0x6e, 0x69, 0x63, 0x2f, 0x69, 0x73, 0x6e, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x4a, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xeb, 0x04, 0x0a,
	0x0d, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x46, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x48,
	0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x0a, 0x69, 0x73, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x69, 0x73, 0x6e, 0x69, 0x63, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x73, 0x6e, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73, 0x70, 0x4a, 0x04, 0x08,
	0x04, 0x10, 0x05, 0x22, 0x4c, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x69, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36,
	0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63,
	0x6d, 0x64, 0x52, 0x65, 0x73, 0x70, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x9c, 0x03, 0x0a,
	0x11, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x70,
	0x70, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x69, 0x73, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x69,
	0x73, 0x6e, 0x69, 0x63, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69,
	0x73, 0x6e, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x71, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x69, 0x0a, 0x0f, 0x48,
	0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x2a, 0xde, 0x01, 0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x07, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x65, 0x64, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x68, 0x69,
	0x62, 0x69, 0x74, 0x65, 0x64, 0x10, 0x09, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x32, 0x30, 0x37, 0x39, 0x36, 0x30, 0x2f, 0x65,
	0x70, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x65, 0x70, 0x70, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_host_host_proto_rawDescOnce sync.Once
	file_host_host_proto_rawDescData = file_host_host_proto_rawDesc
)

func file_host_host_proto_rawDescGZIP() []byte {
	file_host_host_proto_rawDescOnce.Do(func() {
		file_host_host_proto_rawDescData = protoimpl.X.CompressGZIP(file_host_host_proto_rawDescData)
	})
	return file_host_host_proto_rawDescData
}

var file_host_host_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_host_host_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_host_host_proto_goTypes = []interface{}{
	(HostStatus)(0),                 // 0: epp.host.HostStatus
	(*HostCheckRequest)(nil),        // 1: epp.host.HostCheckRequest
	(*HostCheckReply)(nil),          // 2: epp.host.HostCheckReply
	(*HostInfoRequest)(nil),         // 3: epp.host.HostInfoRequest
	(*HostInfoReply)(nil),           // 4: epp.host.HostInfoReply
	(*HostCreateRequest)(nil),       // 5: epp.host.HostCreateRequest
	(*HostCreateReply)(nil),         // 6: epp.host.HostCreateReply
	(*HostDeleteRequest)(nil),       // 7: epp.host.HostDeleteRequest
	(*HostDeleteReply)(nil),         // 8: epp.host.HostDeleteReply
	(*HostUpdateRequest)(nil),       // 9: epp.host.HostUpdateRequest
	(*HostUpdateReply)(nil),         // 10: epp.host.HostUpdateReply
	(*HostUpdateRequest_Param)(nil), // 11: epp.host.HostUpdateRequest.Param
	(*wrapperspb.StringValue)(nil),  // 12: google.protobuf.StringValue
	(*common.CommandResponse)(nil),  // 13: epp.common.CommandResponse
	(*common.IPAddress)(nil),        // 14: epp.common.IPAddress
	(*timestamppb.Timestamp)(nil),   // 15: google.protobuf.Timestamp
	(*isnic.HostInfo)(nil),          // 16: epp.isnic.HostInfo
}
var file_host_host_proto_depIdxs = []int32{
	12, // 0: epp.host.HostCheckReply.reason:type_name -> google.protobuf.StringValue
	13, // 1: epp.host.HostCheckReply.cmd_resp:type_name -> epp.common.CommandResponse
	0,  // 2: epp.host.HostInfoReply.statuses:type_name -> epp.host.HostStatus
	14, // 3: epp.host.HostInfoReply.addresses:type_name -> epp.common.IPAddress
	12, // 4: epp.host.HostInfoReply.client_created_id:type_name -> google.protobuf.StringValue
	15, // 5: epp.host.HostInfoReply.creation_date:type_name -> google.protobuf.Timestamp
	12, // 6: epp.host.HostInfoReply.last_updated_client:type_name -> google.protobuf.StringValue
	15, // 7: epp.host.HostInfoReply.last_updated_date:type_name -> google.protobuf.Timestamp
	15, // 8: epp.host.HostInfoReply.last_transfer_date:type_name -> google.protobuf.Timestamp
	13, // 9: epp.host.HostInfoReply.cmd_resp:type_name -> epp.common.CommandResponse
	14, // 10: epp.host.HostCreateRequest.addresses:type_name -> epp.common.IPAddress
	16, // 11: epp.host.HostCreateRequest.isnic_info:type_name -> epp.isnic.HostInfo
	15, // 12: epp.host.HostCreateReply.creation_date:type_name -> google.protobuf.Timestamp
	13, // 13: epp.host.HostCreateReply.cmd_resp:type_name -> epp.common.CommandResponse
	13, // 14: epp.host.HostDeleteReply.cmd_resp:type_name -> epp.common.CommandResponse
	11, // 15: epp.host.HostUpdateRequest.add:type_name -> epp.host.HostUpdateRequest.Param
	11, // 16: epp.host.HostUpdateRequest.remove:type_name -> epp.host.HostUpdateRequest.Param
	12, // 17: epp.host.HostUpdateRequest.new_name:type_name -> google.protobuf.StringValue
	16, // 18: epp.host.HostUpdateRequest.isnic_info:type_name -> epp.isnic.HostInfo
	13, // 19: epp.host.HostUpdateReply.cmd_resp:type_name -> epp.common.CommandResponse
	14, // 20: epp.host.HostUpdateRequest.Param.address:type_name -> epp.common.IPAddress
	0,  // 21: epp.host.HostUpdateRequest.Param.state:type_name -> epp.host.HostStatus
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_host_host_proto_init() }
func file_host_host_proto_init() {
	if File_host_host_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_host_host_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCheckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_host_host_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUpdateRequest_Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_host_host_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*HostUpdateRequest_Param_Address)(nil),
		(*HostUpdateRequest_Param_State)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_host_host_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_host_host_proto_goTypes,
		DependencyIndexes: file_host_host_proto_depIdxs,
		EnumInfos:         file_host_host_proto_enumTypes,
		MessageInfos:      file_host_host_proto_msgTypes,
	}.Build()
	File_host_host_proto = out.File
	file_host_host_proto_rawDesc = nil
	file_host_host_proto_goTypes = nil
	file_host_host_proto_depIdxs = nil
}
