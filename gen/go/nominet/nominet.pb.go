// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: nominet/nominet.proto

package nominet

import (
	common "github.com/as207960/epp-proxy/gen/go/epp/common"
	contact "github.com/as207960/epp-proxy/gen/go/epp/contact"
	domain "github.com/as207960/epp-proxy/gen/go/epp/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Process_ProcessStage int32

const (
	Process_Initial Process_ProcessStage = 0
	Process_Updated Process_ProcessStage = 1
)

// Enum value maps for Process_ProcessStage.
var (
	Process_ProcessStage_name = map[int32]string{
		0: "Initial",
		1: "Updated",
	}
	Process_ProcessStage_value = map[string]int32{
		"Initial": 0,
		"Updated": 1,
	}
)

func (x Process_ProcessStage) Enum() *Process_ProcessStage {
	p := new(Process_ProcessStage)
	*p = x
	return p
}

func (x Process_ProcessStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Process_ProcessStage) Descriptor() protoreflect.EnumDescriptor {
	return file_nominet_nominet_proto_enumTypes[0].Descriptor()
}

func (Process_ProcessStage) Type() protoreflect.EnumType {
	return &file_nominet_nominet_proto_enumTypes[0]
}

func (x Process_ProcessStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Process_ProcessStage.Descriptor instead.
func (Process_ProcessStage) EnumDescriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{11, 0}
}

type HandshakeAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryName string                  `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	CaseId       string                  `protobuf:"bytes,2,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Registrant   *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=registrant,proto3" json:"registrant,omitempty"`
}

func (x *HandshakeAcceptRequest) Reset() {
	*x = HandshakeAcceptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeAcceptRequest) ProtoMessage() {}

func (x *HandshakeAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeAcceptRequest.ProtoReflect.Descriptor instead.
func (*HandshakeAcceptRequest) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{0}
}

func (x *HandshakeAcceptRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *HandshakeAcceptRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *HandshakeAcceptRequest) GetRegistrant() *wrapperspb.StringValue {
	if x != nil {
		return x.Registrant
	}
	return nil
}

type HandshakeRejectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryName string `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	CaseId       string `protobuf:"bytes,2,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *HandshakeRejectRequest) Reset() {
	*x = HandshakeRejectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeRejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeRejectRequest) ProtoMessage() {}

func (x *HandshakeRejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeRejectRequest.ProtoReflect.Descriptor instead.
func (*HandshakeRejectRequest) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{1}
}

func (x *HandshakeRejectRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *HandshakeRejectRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type HandshakeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId  string                  `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Domains []string                `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	CmdResp *common.CommandResponse `protobuf:"bytes,3,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *HandshakeReply) Reset() {
	*x = HandshakeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeReply) ProtoMessage() {}

func (x *HandshakeReply) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeReply.ProtoReflect.Descriptor instead.
func (*HandshakeReply) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{2}
}

func (x *HandshakeReply) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *HandshakeReply) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *HandshakeReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type ReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryName string  `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	RegistrarTag string  `protobuf:"bytes,2,opt,name=registrar_tag,json=registrarTag,proto3" json:"registrar_tag,omitempty"`
	Object       *Object `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *ReleaseRequest) GetRegistrarTag() string {
	if x != nil {
		return x.RegistrarTag
	}
	return ""
}

func (x *ReleaseRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Object:
	//	*Object_Domain
	//	*Object_Registrant
	Object isObject_Object `protobuf_oneof:"object"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{4}
}

func (m *Object) GetObject() isObject_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (x *Object) GetDomain() string {
	if x, ok := x.GetObject().(*Object_Domain); ok {
		return x.Domain
	}
	return ""
}

func (x *Object) GetRegistrant() string {
	if x, ok := x.GetObject().(*Object_Registrant); ok {
		return x.Registrant
	}
	return ""
}

type isObject_Object interface {
	isObject_Object()
}

type Object_Domain struct {
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3,oneof"`
}

type Object_Registrant struct {
	Registrant string `protobuf:"bytes,4,opt,name=registrant,proto3,oneof"`
}

func (*Object_Domain) isObject_Object() {}

func (*Object_Registrant) isObject_Object() {}

type ReleaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pending bool                    `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
	Message *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CmdResp *common.CommandResponse `protobuf:"bytes,3,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *ReleaseReply) Reset() {
	*x = ReleaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReply) ProtoMessage() {}

func (x *ReleaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReply.ProtoReflect.Descriptor instead.
func (*ReleaseReply) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{5}
}

func (x *ReleaseReply) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *ReleaseReply) GetMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ReleaseReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type NominetTagListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags    []*NominetTagListReply_Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	CmdResp *common.CommandResponse    `protobuf:"bytes,2,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *NominetTagListReply) Reset() {
	*x = NominetTagListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NominetTagListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NominetTagListReply) ProtoMessage() {}

func (x *NominetTagListReply) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NominetTagListReply.ProtoReflect.Descriptor instead.
func (*NominetTagListReply) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{6}
}

func (x *NominetTagListReply) GetTags() []*NominetTagListReply_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NominetTagListReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type DomainCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Originator string `protobuf:"bytes,2,opt,name=originator,proto3" json:"originator,omitempty"`
}

func (x *DomainCancel) Reset() {
	*x = DomainCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCancel) ProtoMessage() {}

func (x *DomainCancel) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCancel.ProtoReflect.Descriptor instead.
func (*DomainCancel) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{7}
}

func (x *DomainCancel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainCancel) GetOriginator() string {
	if x != nil {
		return x.Originator
	}
	return ""
}

type DomainRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountMoved bool     `protobuf:"varint,2,opt,name=account_moved,json=accountMoved,proto3" json:"account_moved,omitempty"`
	From         string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	RegistrarTag string   `protobuf:"bytes,4,opt,name=registrar_tag,json=registrarTag,proto3" json:"registrar_tag,omitempty"`
	Domains      []string `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *DomainRelease) Reset() {
	*x = DomainRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainRelease) ProtoMessage() {}

func (x *DomainRelease) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainRelease.ProtoReflect.Descriptor instead.
func (*DomainRelease) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{8}
}

func (x *DomainRelease) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DomainRelease) GetAccountMoved() bool {
	if x != nil {
		return x.AccountMoved
	}
	return false
}

func (x *DomainRelease) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DomainRelease) GetRegistrarTag() string {
	if x != nil {
		return x.RegistrarTag
	}
	return ""
}

func (x *DomainRelease) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DomainRegistrarChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Originator   string                    `protobuf:"bytes,1,opt,name=originator,proto3" json:"originator,omitempty"`
	RegistrarTag string                    `protobuf:"bytes,2,opt,name=registrar_tag,json=registrarTag,proto3" json:"registrar_tag,omitempty"`
	CaseId       *wrapperspb.StringValue   `protobuf:"bytes,3,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Domains      []*domain.DomainInfoReply `protobuf:"bytes,4,rep,name=domains,proto3" json:"domains,omitempty"`
	Contact      *contact.ContactInfoReply `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *DomainRegistrarChange) Reset() {
	*x = DomainRegistrarChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainRegistrarChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainRegistrarChange) ProtoMessage() {}

func (x *DomainRegistrarChange) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainRegistrarChange.ProtoReflect.Descriptor instead.
func (*DomainRegistrarChange) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{9}
}

func (x *DomainRegistrarChange) GetOriginator() string {
	if x != nil {
		return x.Originator
	}
	return ""
}

func (x *DomainRegistrarChange) GetRegistrarTag() string {
	if x != nil {
		return x.RegistrarTag
	}
	return ""
}

func (x *DomainRegistrarChange) GetCaseId() *wrapperspb.StringValue {
	if x != nil {
		return x.CaseId
	}
	return nil
}

func (x *DomainRegistrarChange) GetDomains() []*domain.DomainInfoReply {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *DomainRegistrarChange) GetContact() *contact.ContactInfoReply {
	if x != nil {
		return x.Contact
	}
	return nil
}

type HostCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostObjects []string `protobuf:"bytes,1,rep,name=host_objects,json=hostObjects,proto3" json:"host_objects,omitempty"`
	DomainNames []string `protobuf:"bytes,2,rep,name=domain_names,json=domainNames,proto3" json:"domain_names,omitempty"`
}

func (x *HostCancel) Reset() {
	*x = HostCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCancel) ProtoMessage() {}

func (x *HostCancel) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCancel.ProtoReflect.Descriptor instead.
func (*HostCancel) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{10}
}

func (x *HostCancel) GetHostObjects() []string {
	if x != nil {
		return x.HostObjects
	}
	return nil
}

func (x *HostCancel) GetDomainNames() []string {
	if x != nil {
		return x.DomainNames
	}
	return nil
}

type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage       Process_ProcessStage      `protobuf:"varint,1,opt,name=stage,proto3,enum=epp.nominet.Process_ProcessStage" json:"stage,omitempty"`
	Contact     *contact.ContactInfoReply `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
	ProcessType string                    `protobuf:"bytes,3,opt,name=process_type,json=processType,proto3" json:"process_type,omitempty"`
	SuspendDate *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=suspend_date,json=suspendDate,proto3" json:"suspend_date,omitempty"`
	CancelDate  *timestamppb.Timestamp    `protobuf:"bytes,5,opt,name=cancel_date,json=cancelDate,proto3" json:"cancel_date,omitempty"`
	DomainNames []string                  `protobuf:"bytes,6,rep,name=domain_names,json=domainNames,proto3" json:"domain_names,omitempty"`
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{11}
}

func (x *Process) GetStage() Process_ProcessStage {
	if x != nil {
		return x.Stage
	}
	return Process_Initial
}

func (x *Process) GetContact() *contact.ContactInfoReply {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *Process) GetProcessType() string {
	if x != nil {
		return x.ProcessType
	}
	return ""
}

func (x *Process) GetSuspendDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SuspendDate
	}
	return nil
}

func (x *Process) GetCancelDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CancelDate
	}
	return nil
}

func (x *Process) GetDomainNames() []string {
	if x != nil {
		return x.DomainNames
	}
	return nil
}

type Suspend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	CancelDate  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=cancel_date,json=cancelDate,proto3" json:"cancel_date,omitempty"`
	DomainNames []string               `protobuf:"bytes,3,rep,name=domain_names,json=domainNames,proto3" json:"domain_names,omitempty"`
}

func (x *Suspend) Reset() {
	*x = Suspend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Suspend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suspend) ProtoMessage() {}

func (x *Suspend) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suspend.ProtoReflect.Descriptor instead.
func (*Suspend) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{12}
}

func (x *Suspend) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Suspend) GetCancelDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CancelDate
	}
	return nil
}

func (x *Suspend) GetDomainNames() []string {
	if x != nil {
		return x.DomainNames
	}
	return nil
}

type DomainFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *DomainFail) Reset() {
	*x = DomainFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainFail) ProtoMessage() {}

func (x *DomainFail) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainFail.ProtoReflect.Descriptor instead.
func (*DomainFail) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{13}
}

func (x *DomainFail) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainFail) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RegistrantTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Originator   string                    `protobuf:"bytes,1,opt,name=originator,proto3" json:"originator,omitempty"`
	AccountId    string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OldAccountId string                    `protobuf:"bytes,3,opt,name=old_account_id,json=oldAccountId,proto3" json:"old_account_id,omitempty"`
	CaseId       *wrapperspb.StringValue   `protobuf:"bytes,4,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	DomainNames  []string                  `protobuf:"bytes,5,rep,name=domain_names,json=domainNames,proto3" json:"domain_names,omitempty"`
	Contact      *contact.ContactInfoReply `protobuf:"bytes,6,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *RegistrantTransfer) Reset() {
	*x = RegistrantTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrantTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrantTransfer) ProtoMessage() {}

func (x *RegistrantTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrantTransfer.ProtoReflect.Descriptor instead.
func (*RegistrantTransfer) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{14}
}

func (x *RegistrantTransfer) GetOriginator() string {
	if x != nil {
		return x.Originator
	}
	return ""
}

func (x *RegistrantTransfer) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RegistrantTransfer) GetOldAccountId() string {
	if x != nil {
		return x.OldAccountId
	}
	return ""
}

func (x *RegistrantTransfer) GetCaseId() *wrapperspb.StringValue {
	if x != nil {
		return x.CaseId
	}
	return nil
}

func (x *RegistrantTransfer) GetDomainNames() []string {
	if x != nil {
		return x.DomainNames
	}
	return nil
}

func (x *RegistrantTransfer) GetContact() *contact.ContactInfoReply {
	if x != nil {
		return x.Contact
	}
	return nil
}

type ContactValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryName string `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	ContactId    string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
}

func (x *ContactValidateRequest) Reset() {
	*x = ContactValidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactValidateRequest) ProtoMessage() {}

func (x *ContactValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactValidateRequest.ProtoReflect.Descriptor instead.
func (*ContactValidateRequest) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{15}
}

func (x *ContactValidateRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *ContactValidateRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type ContactValidateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdResp *common.CommandResponse `protobuf:"bytes,1,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *ContactValidateReply) Reset() {
	*x = ContactValidateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactValidateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactValidateReply) ProtoMessage() {}

func (x *ContactValidateReply) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactValidateReply.ProtoReflect.Descriptor instead.
func (*ContactValidateReply) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{16}
}

func (x *ContactValidateReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryName string  `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	LockType     string  `protobuf:"bytes,2,opt,name=lock_type,json=lockType,proto3" json:"lock_type,omitempty"`
	Object       *Object `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{17}
}

func (x *LockRequest) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *LockRequest) GetLockType() string {
	if x != nil {
		return x.LockType
	}
	return ""
}

func (x *LockRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type LockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdResp *common.CommandResponse `protobuf:"bytes,1,opt,name=cmd_resp,json=cmdResp,proto3" json:"cmd_resp,omitempty"`
}

func (x *LockReply) Reset() {
	*x = LockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReply) ProtoMessage() {}

func (x *LockReply) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReply.ProtoReflect.Descriptor instead.
func (*LockReply) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{18}
}

func (x *LockReply) GetCmdResp() *common.CommandResponse {
	if x != nil {
		return x.CmdResp
	}
	return nil
}

type NominetTagListReply_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag         string                  `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TradingName *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=trading_name,json=tradingName,proto3" json:"trading_name,omitempty"`
	Handshake   bool                    `protobuf:"varint,4,opt,name=handshake,proto3" json:"handshake,omitempty"`
}

func (x *NominetTagListReply_Tag) Reset() {
	*x = NominetTagListReply_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nominet_nominet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NominetTagListReply_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NominetTagListReply_Tag) ProtoMessage() {}

func (x *NominetTagListReply_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_nominet_nominet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NominetTagListReply_Tag.ProtoReflect.Descriptor instead.
func (*NominetTagListReply_Tag) Descriptor() ([]byte, []int) {
	return file_nominet_nominet_proto_rawDescGZIP(), []int{6, 0}
}

func (x *NominetTagListReply_Tag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *NominetTagListReply_Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NominetTagListReply_Tag) GetTradingName() *wrapperspb.StringValue {
	if x != nil {
		return x.TradingName
	}
	return nil
}

func (x *NominetTagListReply_Tag) GetHandshake() bool {
	if x != nil {
		return x.Handshake
	}
	return false
}

var File_nominet_nominet_proto protoreflect.FileDescriptor

var file_nominet_nominet_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x2f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x70, 0x70, 0x2e, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x56, 0x0a,
	0x16, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65,
	0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x54, 0x61, 0x67, 0x12,
	0x2b, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x4e, 0x0a, 0x06,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x20, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x98, 0x01, 0x0a,
	0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x63, 0x6d, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x94, 0x02, 0x0a, 0x13, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x38, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x65, 0x70, 0x70, 0x2e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x1a, 0x8a, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x42,
	0x0a, 0x0c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x0d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x54, 0x61,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x15,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x54, 0x61, 0x67, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x70, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x22, 0x52, 0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xe7, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x22,
	0x81, 0x01, 0x0a, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6c, 0x64, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x22, 0x5c, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x4e,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7c,
	0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x70, 0x70, 0x2e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x43, 0x0a, 0x09,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6d, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x73, 0x32, 0x30, 0x37, 0x39, 0x36, 0x30, 0x2f, 0x65, 0x70, 0x70, 0x2d, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x70, 0x70, 0x2f, 0x6e, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nominet_nominet_proto_rawDescOnce sync.Once
	file_nominet_nominet_proto_rawDescData = file_nominet_nominet_proto_rawDesc
)

func file_nominet_nominet_proto_rawDescGZIP() []byte {
	file_nominet_nominet_proto_rawDescOnce.Do(func() {
		file_nominet_nominet_proto_rawDescData = protoimpl.X.CompressGZIP(file_nominet_nominet_proto_rawDescData)
	})
	return file_nominet_nominet_proto_rawDescData
}

var file_nominet_nominet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nominet_nominet_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_nominet_nominet_proto_goTypes = []interface{}{
	(Process_ProcessStage)(0),        // 0: epp.nominet.Process.ProcessStage
	(*HandshakeAcceptRequest)(nil),   // 1: epp.nominet.HandshakeAcceptRequest
	(*HandshakeRejectRequest)(nil),   // 2: epp.nominet.HandshakeRejectRequest
	(*HandshakeReply)(nil),           // 3: epp.nominet.HandshakeReply
	(*ReleaseRequest)(nil),           // 4: epp.nominet.ReleaseRequest
	(*Object)(nil),                   // 5: epp.nominet.Object
	(*ReleaseReply)(nil),             // 6: epp.nominet.ReleaseReply
	(*NominetTagListReply)(nil),      // 7: epp.nominet.NominetTagListReply
	(*DomainCancel)(nil),             // 8: epp.nominet.DomainCancel
	(*DomainRelease)(nil),            // 9: epp.nominet.DomainRelease
	(*DomainRegistrarChange)(nil),    // 10: epp.nominet.DomainRegistrarChange
	(*HostCancel)(nil),               // 11: epp.nominet.HostCancel
	(*Process)(nil),                  // 12: epp.nominet.Process
	(*Suspend)(nil),                  // 13: epp.nominet.Suspend
	(*DomainFail)(nil),               // 14: epp.nominet.DomainFail
	(*RegistrantTransfer)(nil),       // 15: epp.nominet.RegistrantTransfer
	(*ContactValidateRequest)(nil),   // 16: epp.nominet.ContactValidateRequest
	(*ContactValidateReply)(nil),     // 17: epp.nominet.ContactValidateReply
	(*LockRequest)(nil),              // 18: epp.nominet.LockRequest
	(*LockReply)(nil),                // 19: epp.nominet.LockReply
	(*NominetTagListReply_Tag)(nil),  // 20: epp.nominet.NominetTagListReply.Tag
	(*wrapperspb.StringValue)(nil),   // 21: google.protobuf.StringValue
	(*common.CommandResponse)(nil),   // 22: epp.common.CommandResponse
	(*domain.DomainInfoReply)(nil),   // 23: epp.domain.DomainInfoReply
	(*contact.ContactInfoReply)(nil), // 24: epp.contact.ContactInfoReply
	(*timestamppb.Timestamp)(nil),    // 25: google.protobuf.Timestamp
}
var file_nominet_nominet_proto_depIdxs = []int32{
	21, // 0: epp.nominet.HandshakeAcceptRequest.registrant:type_name -> google.protobuf.StringValue
	22, // 1: epp.nominet.HandshakeReply.cmd_resp:type_name -> epp.common.CommandResponse
	5,  // 2: epp.nominet.ReleaseRequest.object:type_name -> epp.nominet.Object
	21, // 3: epp.nominet.ReleaseReply.message:type_name -> google.protobuf.StringValue
	22, // 4: epp.nominet.ReleaseReply.cmd_resp:type_name -> epp.common.CommandResponse
	20, // 5: epp.nominet.NominetTagListReply.tags:type_name -> epp.nominet.NominetTagListReply.Tag
	22, // 6: epp.nominet.NominetTagListReply.cmd_resp:type_name -> epp.common.CommandResponse
	21, // 7: epp.nominet.DomainRegistrarChange.case_id:type_name -> google.protobuf.StringValue
	23, // 8: epp.nominet.DomainRegistrarChange.domains:type_name -> epp.domain.DomainInfoReply
	24, // 9: epp.nominet.DomainRegistrarChange.contact:type_name -> epp.contact.ContactInfoReply
	0,  // 10: epp.nominet.Process.stage:type_name -> epp.nominet.Process.ProcessStage
	24, // 11: epp.nominet.Process.contact:type_name -> epp.contact.ContactInfoReply
	25, // 12: epp.nominet.Process.suspend_date:type_name -> google.protobuf.Timestamp
	25, // 13: epp.nominet.Process.cancel_date:type_name -> google.protobuf.Timestamp
	25, // 14: epp.nominet.Suspend.cancel_date:type_name -> google.protobuf.Timestamp
	21, // 15: epp.nominet.RegistrantTransfer.case_id:type_name -> google.protobuf.StringValue
	24, // 16: epp.nominet.RegistrantTransfer.contact:type_name -> epp.contact.ContactInfoReply
	22, // 17: epp.nominet.ContactValidateReply.cmd_resp:type_name -> epp.common.CommandResponse
	5,  // 18: epp.nominet.LockRequest.object:type_name -> epp.nominet.Object
	22, // 19: epp.nominet.LockReply.cmd_resp:type_name -> epp.common.CommandResponse
	21, // 20: epp.nominet.NominetTagListReply.Tag.trading_name:type_name -> google.protobuf.StringValue
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_nominet_nominet_proto_init() }
func file_nominet_nominet_proto_init() {
	if File_nominet_nominet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nominet_nominet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeAcceptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeRejectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NominetTagListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainRegistrarChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Suspend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrantTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactValidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactValidateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nominet_nominet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NominetTagListReply_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nominet_nominet_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Object_Domain)(nil),
		(*Object_Registrant)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nominet_nominet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nominet_nominet_proto_goTypes,
		DependencyIndexes: file_nominet_nominet_proto_depIdxs,
		EnumInfos:         file_nominet_nominet_proto_enumTypes,
		MessageInfos:      file_nominet_nominet_proto_msgTypes,
	}.Build()
	File_nominet_nominet_proto = out.File
	file_nominet_nominet_proto_rawDesc = nil
	file_nominet_nominet_proto_goTypes = nil
	file_nominet_nominet_proto_depIdxs = nil
}
