syntax = "proto3";
package epp;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "contact.proto";
import "domain.proto";
import "host.proto";
import "rgp.proto";

service EPPProxy {
    rpc DomainCheck            (domain.DomainCheckRequest)                returns (domain.DomainCheckReply);
    rpc DomainInfo             (domain.DomainInfoRequest)                 returns (domain.DomainInfoReply);
    rpc DomainCreate           (domain.DomainCreateRequest)               returns (domain.DomainCreateReply);
    rpc DomainDelete           (domain.DomainDeleteRequest)               returns (domain.DomainDeleteReply);
    rpc DomainUpdate           (domain.DomainUpdateRequest)               returns (domain.DomainUpdateReply);
    rpc DomainRenew            (domain.DomainRenewRequest)                returns (domain.DomainRenewReply);
    rpc DomainTransferQuery    (domain.DomainTransferQueryRequest)        returns (domain.DomainTransferReply);
    rpc DomainTransferRequest  (domain.DomainTransferRequestRequest)      returns (domain.DomainTransferReply);
    rpc DomainTransferAccept   (domain.DomainTransferAcceptRejectRequest) returns (domain.DomainTransferReply);
    rpc DomainTransferReject   (domain.DomainTransferAcceptRejectRequest) returns (domain.DomainTransferReply);
    rpc DomainRestoreRequest   (rgp.RequestRequest)                       returns (rgp.RestoreReply);
    rpc HostCheck              (host.HostCheckRequest)                    returns (host.HostCheckReply);
    rpc HostInfo               (host.HostInfoRequest)                     returns (host.HostInfoReply);
    rpc HostCreate             (host.HostCreateRequest)                   returns (host.HostCreateReply);
    rpc HostDelete             (host.HostDeleteRequest)                   returns (host.HostDeleteReply);
    rpc HostUpdate             (host.HostUpdateRequest)                   returns (host.HostUpdateReply);
    rpc ContactCheck           (contact.ContactCheckRequest)              returns (contact.ContactCheckReply);
    rpc ContactInfo            (contact.ContactInfoRequest)               returns (contact.ContactInfoReply);
    rpc ContactCreate          (contact.ContactCreateRequest)             returns (contact.ContactCreateReply);
    rpc ContactDelete          (contact.ContactDeleteRequest)             returns (contact.ContactDeleteReply);
    rpc ContactUpdate          (contact.ContactUpdateRequest)             returns (contact.ContactUpdateReply);
    rpc ContactTransferQuery   (contact.ContactTransferQueryRequest)      returns (contact.ContactTransferReply);
    rpc ContactTransferRequest (contact.ContactTransferRequestRequest)    returns (contact.ContactTransferReply);
    rpc ContactTransferAccept  (contact.ContactTransferRequestRequest)    returns (contact.ContactTransferReply);
    rpc ContactTransferReject  (contact.ContactTransferRequestRequest)    returns (contact.ContactTransferReply);
    rpc Poll                   (RegistryInfo)                             returns (stream PollReply);
    rpc NominetTagList         (RegistryInfo)                             returns (NominetTagListReply);
}

message RegistryInfo {
    string registry_name = 1;
}

message PollReply {
    string msg_id = 1;
    google.protobuf.Timestamp enqueue_date = 2;
    string message = 3;
}

message NominetTagListReply {
    message Tag {
        string tag = 1;
        string name = 2;
        google.protobuf.StringValue trading_name = 3;
        bool handshake = 4;
    }

    repeated Tag tags = 1;
}