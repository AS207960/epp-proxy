syntax = "proto3";
package epp.tmch;
option go_package = "github.com/as207960/epp-proxy/gen/go/epp/tmch";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "common.proto";
import "marks.proto";

message MarkCheckRequest {
    string id = 1;
    string registry_name = 2;
}

message MarkCheckResponse {
    bool available = 1;
    google.protobuf.StringValue reason = 2;
    common.CommandResponse cmd_resp = 3;
}

message BalanceData {
    string value = 1;
    string currency = 2;
    uint32 status_points = 3;
}

message MarkCreateRequest {
    marks.Mark mark = 1;
    common.Period period = 2;
    repeated Document documents = 3;
    repeated CreateLabel labels = 4;
    repeated string variations = 5;
    string registry_name = 6;
}

message Document {
    DocumentClass document_class = 1;
    string file_name = 2;
    FileType file_type = 3;
    bytes contents = 4;
}

message CreateLabel {
    string label = 1;
    bool smd_inclusion = 2;
    bool claims_notify = 3;
}

enum DocumentClass {
    Other = 0;
    LicenseeDeclaration = 1;
    AssigneeDeclaration = 2;
    DeclarationProofOfUseOneSample = 3;
    OtherProofOfUse = 4;
    CopyOfCourtOrder = 5;
}

enum FileType {
    PDF = 0;
    JPG = 1;
}

message MarkCreateResponse {
    string id = 1;
    google.protobuf.Timestamp created_date = 2;
    BalanceData balance = 3;
    common.CommandResponse cmd_resp = 4;
}

message MarkInfoRequest {
    string id = 1;
    string registry_name = 2;
}

enum MarkStatusType {
    Unknown = 0;
    New = 1;
    Verified = 2;
    Incorrect = 3;
    Corrected = 4;
    Invalid = 5;
    Expired = 6;
    Deactivated = 7;
}

enum MarkPOUStatusType {
    POUNotSet = 0;
    POUValid = 1;
    POUInvalid = 2;
    POUExpired = 3;
    POUNA = 4;
    POUNew = 5;
    POUIncorrect = 6;
    POUCorrected = 7;
}

message MarkStatus {
    MarkStatusType status_type = 1;
    google.protobuf.StringValue message = 2;
}

message MarkPOUStatus {
    MarkPOUStatusType status_type = 1;
    google.protobuf.StringValue message = 2;
}

message MarkInfoResponse {
    string id = 1;
    MarkStatus status = 2;
    MarkPOUStatus pou_status = 3;
    repeated MarkLabel labels = 4;
    repeated MarkVariation variations = 11;
    google.protobuf.Timestamp creation_date = 5;
    google.protobuf.Timestamp update_date = 6;
    google.protobuf.Timestamp expiry_date = 7;
    google.protobuf.Timestamp pou_expiry_date = 8;
    google.protobuf.Timestamp correct_before = 9;
    common.CommandResponse cmd_resp = 10;
}

message MarkLabel {
    string a_label = 1;
    string u_label = 2;
    bool smd_inclusion = 3;
    bool claim_notify = 4;
}

message MarkLabelTrex {
    bool enabled = 1;
    google.protobuf.Timestamp until = 2;
    repeated MarkLabelTrexTLD tlds = 3;
}

message MarkLabelTrexTLD {
    string tld = 1;
    google.protobuf.StringValue comment = 2;
    TrexStatus status = 3;
}

enum TrexStatus {
    NoInfo = 0;
    NotProtectedOverride = 1;
    NotProtectedRegistered = 2;
    NotProtectedExempt = 3;
    NotProtectedOther = 4;
    Protected = 5;
    Unavailable = 6;
    Eligible = 7;
}

message MarkVariation {
    string a_label = 1;
    string u_label = 2;
    string variation_type = 3;
    bool active = 4;
}

message MarkSMDInfoResponse {
    string id = 1;
    MarkStatus status = 2;
    string smd_id = 3;
    string smd = 4;
    common.CommandResponse cmd_resp = 5;
}

message MarkUpdateRequest {
    string id = 1;
    repeated MarkUpdateAdd add = 2;
    repeated MarkUpdateRemove remove = 3;
    marks.Mark new_mark = 4;
    repeated CreateLabel update_labels = 5;
    repeated CaseUpdate update_cases = 6;
    string registry_name = 7;
}

message MarkUpdateResponse {
    common.CommandResponse cmd_resp = 1;
}

message MarkUpdateAdd {
    oneof update {
        Document document = 1;
        CreateLabel label = 2;
        string variation = 3;
        AddCase case = 4;
    }
}

message MarkUpdateRemove {
    oneof update {
        string label = 1;
        string variation = 2;
    }
}

message AddCase {
    string id = 1;
    oneof case {
        UDRPCase udrp = 2;
        CourtCase court = 3;
    }
    repeated CaseDocument documents = 4;
    repeated string labels = 5;
}

message CaseUpdate {
    string id = 1;
    repeated CaseAdd add = 2;
    repeated CaseRemove remove = 3;
    oneof new_case {
        UDRPCase new_udrp = 4;
        CourtCase new_court = 5;
    }
}

message CaseAdd {
    oneof update {
        CaseDocument document = 4;
        string label = 2;
    }
}

message CaseRemove {
    oneof update {
        string label = 1;
    }
}

message UDRPCase {
    string case_id = 1;
    string provider = 2;
    string case_language = 3;
}

message CourtCase {
    string decision_id = 1;
    string court_name = 2;
    string country_code = 3;
    string case_language = 4;
    repeated string regions = 5;
}

message CaseDocument {
    CourtDocumentClass document_class = 1;
    string file_name = 2;
    FileType file_type = 3;
    bytes contents = 4;
}

enum CourtDocumentClass {
    CourtOther = 0;
    CourtDecision = 1;
}

message MarkRenewRequest {
    string id = 1;
    common.Period add_period = 2;
    google.protobuf.Timestamp current_expiry_date = 3;
    string registry_name = 4;
}

message MarkRenewResponse {
    string id = 1;
    google.protobuf.Timestamp new_expiry_date = 2;
    BalanceData balance = 3;
    common.CommandResponse cmd_resp = 4;
}

message MarkTransferRequest {
    string id = 1;
    string auth_info = 2;
    string registry_name = 3;
}

message MarkTransferResponse {
    string id = 1;
    google.protobuf.Timestamp transfer_date = 2;
    BalanceData balance = 3;
    common.CommandResponse cmd_resp = 4;
}

message MarkTransferInitiateRequest {
    string id = 1;
    string registry_name = 3;
}

message MarkTransferInitiateResponse {
    string id = 1;
    string auth_info = 2;
    common.CommandResponse cmd_resp = 3;
}

message MarkTrexActivateRequest {
    string id = 1;
    repeated TrexActivateLabel labels = 2;
    string registry_name = 4;
}

message TrexActivateLabel {
    string label = 1;
    common.Period period = 2;
}

message MarkTrexActivateResponse {
    common.CommandResponse cmd_resp = 1;
}

message MarkTrexRenewRequest {
    string id = 1;
    repeated TrexRenewLabel labels = 2;
    string registry_name = 4;
}

message TrexRenewLabel {
    string label = 1;
    common.Period add_period = 2;
    google.protobuf.Timestamp current_expiry_date = 3;
}

message MarkTrexRenewResponse {
    common.CommandResponse cmd_resp = 1;
}