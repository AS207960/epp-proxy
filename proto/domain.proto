syntax = "proto3";
package epp.domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "common.proto";
import "rgp.proto";

message Contact {
    string id = 1;
    string type = 2;
}
message NameServer {
    oneof server {
        string host_obj = 1;
        string host_name = 3;
    }
    repeated common.IPAddress addresses = 2;
}
message Period {
    enum Unit {
        Years = 0;
        Months = 1;
    }

    uint32 value = 1;
    Unit unit = 2;
}

enum DomainStatus {
    ClientDeleteProhibited = 0;
    ClientHold = 1;
    ClientRenewProhibited = 2;
    ClientTransferProhibited = 3;
    ClientUpdateProhibited = 4;
    Inactive = 5;
    Ok = 6;
    PendingCreate = 7;
    PendingDelete = 8;
    PendingRenew = 9;
    PendingTransfer = 10;
    PendingUpdate = 11;
    ServerDeleteProhibited = 12;
    ServerHold = 13;
    ServerRenewProhibited = 14;
    ServerTransferProhibited = 15;
    ServerUpdateProhibited = 16;
}

message DomainCheckRequest {
    string name = 1;
}

message DomainCheckReply {
    bool available = 1;
    google.protobuf.StringValue reason = 2;
    string registry_name = 3;
}

message DomainInfoRequest {
    string name = 1;
}

message DomainInfoReply {
    string name = 1;
    string registry_id = 2;
    repeated DomainStatus statuses = 3;
    string registrant = 4;
    repeated Contact contacts = 5;
    repeated NameServer nameservers = 6;
    repeated string hosts = 7;
    string client_id = 8;
    google.protobuf.StringValue client_created_id = 9;
    google.protobuf.Timestamp creation_date = 10;
    google.protobuf.Timestamp expiry_date = 11;
    google.protobuf.StringValue last_updated_client = 12;
    google.protobuf.Timestamp last_updated_date = 13;
    google.protobuf.Timestamp last_transfer_date = 14;
    string registry_name = 15;
    rgp.RGPState rgp_state = 16;
    google.protobuf.StringValue auth_info = 17;
    SecDNSData sec_dns = 18;
}

message DomainCreateRequest {
    string name = 1;
    Period period = 2;
    string registrant = 3;
    repeated Contact contacts = 4;
    repeated NameServer nameservers = 5;
    string auth_info = 6;
    SecDNSData sec_dns = 7;
}

message DomainCreateReply {
    string name = 1;
    bool pending = 2;
    google.protobuf.Timestamp creation_date = 3;
    google.protobuf.Timestamp expiry_date = 4;
    string registry_name = 5;
}

message DomainDeleteRequest {
    string name = 1;
}

message DomainDeleteReply {
    bool pending = 1;
    string registry_name = 2;
}

message DomainUpdateRequest {
    message Param {
        oneof param {
            NameServer nameserver = 1;
            Contact contact = 2;
            DomainStatus state = 3;
        }
    }

    string name = 1;
    repeated Param add = 2;
    repeated Param remove = 3;
    google.protobuf.StringValue new_registrant = 4;
    google.protobuf.StringValue new_auth_info = 5;
    UpdateSecDNSData sec_dns = 6;
}

message DomainUpdateReply {
    bool pending = 1;
    string registry_name = 2;
}

message DomainRenewRequest {
    string name = 1;
    Period period = 2;
    google.protobuf.Timestamp current_expiry_date = 3;
}

message DomainRenewReply {
    bool pending = 1;
    google.protobuf.Timestamp expiry_date = 2;
    string registry_name = 3;
}

message DomainTransferQueryRequest {
    string name = 1;
    google.protobuf.StringValue auth_info = 2;
}

message DomainTransferRequestRequest {
    string name = 1;
    Period period = 2;
    string auth_info = 3;
}

message DomainTransferAcceptRejectRequest {
    string name = 1;
    string auth_info = 2;
}

message DomainTransferReply {
    bool pending = 1;
    common.TransferStatus status = 2;
    string requested_client_id = 3;
    google.protobuf.Timestamp requested_date = 4;
    string act_client_id = 5;
    google.protobuf.Timestamp act_date = 6;
    google.protobuf.Timestamp expiry_date = 7;
    string registry_name = 8;
}

message SecDNSData {
    google.protobuf.Int64Value max_sig_life = 1;
    oneof data {
        SecDNSDSData ds_data = 2;
        SecDNSKeyData key_data = 3;
    }
}

message SecDNSDSData {
    repeated SecDNSDSDatum data = 1;
}

message SecDNSDSDatum {
    uint32 key_tag = 1;
    uint32 algorithm = 2;
    uint32 digest_type = 3;
    string digest = 4;
    SecDNSKeyDatum key_data = 5;
}

message SecDNSKeyData {
    repeated SecDNSKeyDatum data = 1;
}

message SecDNSKeyDatum {
    uint32 flags = 1;
    uint32 protocol = 2;
    uint32 algorithm = 3;
    string public_key = 4;
}

message UpdateSecDNSData {
    google.protobuf.BoolValue urgent = 1;
    google.protobuf.Int64Value new_max_sig_life = 2;
    oneof add {
        SecDNSDSData add_ds_data = 3;
        SecDNSKeyData add_key_data = 4;
    }
    oneof remove {
        bool remove_all = 5;
        SecDNSDSData remove_ds_data = 6;
        SecDNSKeyData remove_key_data = 7;
    }
}